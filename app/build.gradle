apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'AndResGuard'

android {
    signingConfigs {
        release {
            def propFile = rootProject.file("../config/keystore.properties")
            def prop = new Properties()
            def fis = new FileInputStream(propFile)
            prop.load(fis)
            fis.close()

            if (!prop.isEmpty()) {
                keyAlias prop['keyAlias']
                keyPassword prop['keyPassword']
                storePassword prop['storePassword']
                storeFile file(prop['keyStore'])
            }
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.phantomvk.messagekit"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 3
        versionName "0.1.3"
        resConfigs "en"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            ndk { abiFilters "armeabi-v7a" }
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def name = "${parent.name}_v${defaultConfig.versionName}_${variant.buildType.name}.apk"
            output.outputFileName = new File(name)
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':vkit')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0-alpha03'
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta02'

    // Anko
    implementation "org.jetbrains.anko:anko-sdk27:${versions.anko}"

    // OkHttp, Okio
    implementation "com.squareup.okio:okio:${versions.okio}"
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

    // Glide
    implementation "com.github.bumptech.glide:okhttp3-integration:${versions.glide}@aar"
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    implementation "com.github.bumptech.glide:annotations:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}" // kapt for Kotlin, annotationProcessor for Java
}

andResGuard {
    mappingFile = null
    use7zip = true
    useSign = true
    keepRoot = false
    fixedResName = "arg"
    mergeDuplicatedRes = true
    whiteList = [
            "R.drawable.icon",
            "R.string.com.crashlytics.*",
            "R.string.google_app_id",
            "R.string.gcm_defaultSenderId",
            "R.string.default_web_client_id",
            "R.string.ga_trackingId",
            "R.string.firebase_database_url",
            "R.string.google_api_key",
            "R.string.google_crash_reporting_api_key"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.17'
    }
}

